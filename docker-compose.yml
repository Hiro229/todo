# Docker Compose for Development Environment
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-todoapp}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-todoapp}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key-not-for-production}
      DEBUG: ${DEBUG:-true}
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_cache:/app/__pycache__
    networks:
      - todo-network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_cache:

networks:
  todo-network:
    driver: bridge